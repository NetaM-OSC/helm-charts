apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "control-plane.fullname" . }}
  labels:
    {{- include "control-plane.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "control-plane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "control-plane.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "control-plane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          image: postgres:alpine
          command:
            - 'sh'
            - '-c'
            - 'until $(pg_isready --host="$POSTGRES_HOST" --username="$POSTGRES_USER" --dbname="$POSTGRES_DB" > /dev/null 2>&1 ); do echo "[$(date)] # Wating postgres"; sleep 1; done && exit 0'
          env:
            - name: POSTGRES_HOST
              value: {{ .Release.Name }}-postgres
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: {{ .Release.Name }}-postgres
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: {{ .Release.Name }}-postgres
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "control-plane.fullname" . }}
            - secretRef:
                name: {{ include "control-plane.fullname" . }}
          env:
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: {{ .Release.Name }}-postgres
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: {{ .Release.Name }}-postgres
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: {{ .Release.Name }}-postgres
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
